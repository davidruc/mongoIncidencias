use("db_incidencias");
db.createCollection("counters");
db.counters.insertMany([
    { counter: "trainerId", sequence_value: 0 },
    { counter: "incidenciaId", sequence_value: 0 }
]);

db.createCollection("trainer", {
    capped: true,
    size: 5000,
    max: 15,
    validator: {
        $jsonSchema: {
            bsonType: 'object',
            additionalProperties: false,
            required: ['_id', 'id_trainer','nombre', 'clave', 'email_personal', 'telefono_movil', 'rol'],
            properties: {
                _id: {
                    bsonType: 'objectId'
                },
                id_trainer: {
                    bsonType: 'int'
                },
                nombre: {
                    bsonType: 'string',
                    description: `El parametro nombre es obligatorio y debe ser un string.`
                },
                rol: { 
                    bsonType: 'string',
                    description: `El parametro rol es obligatorio y debe ser un string.`
                },
                clave: {
                    bsonType: "string"
                },
                permisos: { 
                    bsonType: 'object',
                    description: "Ingrese los permisos",
                    properties: {
                        "/api": {
                            bsonType: "array",
                            items: {
                                bsonType: "string",
                                description: "Ingrese la version autorizada",
                            }
                        }
                    }
                },
                email_personal: {
                    bsonType: 'string',
                    description: `El parametro email_personal es obligatorio y debe ser un string.`
                },
                email_corporativo: {
                    bsonType: 'string',
                    description: `El parametro email_corporativo es obligatorio y debe ser un string.`
                },
                telefono_movil: {
                    bsonType: 'string',
                    description: `El parametro telefono_movil es obligatorio y debe ser un string.`
                },
                telefono_residencia: {
                    bsonType: 'string',
                    description: `El parametro telefono_residencia es obligatorio y debe ser un string.`
                },
                telefono_empresa: {
                    bsonType: 'string',
                    description: `El parametro telefono_empresa es obligatorio y debe ser un string.`
                },
                telefono_movil_empresarial: {
                    bsonType: 'string',
                    description: `El parametro telefono_movil_empresarial es obligatorio y debe ser un string.`
                },
                cuenta_bancaria: {
                    bsonType: 'int',
                    description: `El parametro cuenta_bancaria debe ser un numero entero (int).`
                }
            }
        }
    }
});

db.createCollection("incidencia", {
    capped: true,
    size: 50000,
    max: 50,
    validator: {
        $jsonSchema: {
            bsonType: 'object',
            additionalProperties: false,
            required: ['_id', 'id_incidencia', 'trainerId' , 'categoria', 'tipo_incidencia', 'fecha_reporte', 'area_incidencia', 'equipo_averiado', 'codigo_equipo', 'descripcion'],
            properties: {
                _id: {
                    bsonType: 'objectId'
                },
                id_incidencia: {
                    bsonType: 'int'
                },
                trainerId: {
                    bsonType: 'int',
                    description: `El parametro trainerId es obligatorio y debe ser un int`
                },
                categoria: {
                    bsonType: 'string',
                    description: `El parametro categoria es obligatorio y debe ser un string.`,
                    enum: ["hardware", "software"]
                },
                tipo_incidencia: {
                    bsonType: 'string',
                    description: `El parametro tipo_incidencia es obligatorio y debe ser un string.`,
                    enum: ["leve", "moderada", "critica"]
                },
                fecha_reporte: {
                    bsonType: 'string',
                    description: `El parametro fecha_reporte es obligatorio y debe ser un string en formato YYYY-MM-DD.`
                },
                area_incidencia: {
                    bsonType: 'string',
                    description: `El parametro area_incidencia es obligatorio y debe ser un string.`,
                    enum: ["Apolo", "Artemis", "Sputnik", "Skylab", "Corvus", "Endor"]
                },
                equipo_averiado: {
                    bsonType: 'string',
                    description: `El parametro equipo_averiado es obligatorio y debe ser un string.`,
                    enum: ["pantalla", "mouse", "diadema", "teclado", "torre"]
                },
                color_equipo: {
                    bsonType: 'string',
                    description: `El parametro color_equipo debe ser un string.`
                },
                codigo_equipo: {
                    bsonType: 'string',
                    description: `El parametro codigo_equipo es obligatorio y debe ser un string.`
                },
                descripcion: {
                    bsonType: 'string',
                    description: `El parametro descripcion es obligatorio y debe ser un string.`
                }
            }
        }
    }
});